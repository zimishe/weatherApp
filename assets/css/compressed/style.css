.table {
  display: table;
  vertical-align: middle;
  width: 100%; }

.table-cell {
  display: table-cell;
  vertical-align: middle; }

@font-face {
  font-family: 'RobotoLight';
  src: url("../../fonts/Roboto/RobotoLight.eot");
  src: url("../../fonts/Roboto/RobotoLight.eot") format("embedded-opentype"), url("../../fonts/Roboto/RobotoLight.woff2") format("woff2"), url("../../fonts/Roboto/RobotoLight.woff") format("woff"), url("../../fonts/Roboto/RobotoLight.ttf") format("truetype"), url("../../fonts/Roboto/RobotoLight.svg#RobotoLight") format("svg"); }

@font-face {
  font-family: 'RobotoBold';
  src: url("../../fonts/Roboto/RobotoBold.eot");
  src: url("../../fonts/Roboto/RobotoBold.eot") format("embedded-opentype"), url("../../fonts/Roboto/RobotoBold.woff2") format("woff2"), url("../../fonts/Roboto/RobotoBold.woff") format("woff"), url("../../fonts/Roboto/RobotoBold.ttf") format("truetype"), url("../../fonts/Roboto/RobotoBold.svg#RobotoBold") format("svg"); }

*, h1, h2, h3, h4, h5, h6, p, ul, li {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  outline: none; }

html {
  height: 100%;
  min-height: 100%; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

ul, li {
  list-style: none; }

input, button {
  border: none;
  outline: 0; }

body {
  width: 100%;
  height: 100%;
  font: 16px/20px "RobotoLight", Helvetica, Arial, sans-serif;
  color: #fff; }
  body.fixed {
    overflow: hidden; }

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle; }

a, a:hover, a:active, a:focus, a:visited {
  text-decoration: none;
  outline: none;
  cursor: pointer; }

.button {
  padding: 8px 25px;
  color: #fff;
  font-size: 22px; }

a.button {
  display: inline-block; }

.wrapper {
  min-width: 320px;
  margin: 0 auto;
  min-height: 100%;
  height: auto !important;
  height: 100%; }

/* Footer
-----------------------------------------------------------------------------*/
.footer {
  position: relative; }

.container {
  max-width: 970px;
  margin: 0 auto; }

body {
  height: 100vh;
  background: #f7f7f9;
  width: 100%;
  display: table;
  vertical-align: middle;
  text-align: center; }

.weather-info {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin: 0 -5px; }
  .weather-info__item {
    margin: 5px;
    padding: 10px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -ms-flex-preferred-size: calc(25% - 10px);
    flex-basis: calc(25% - 10px);
    border: 1px solid #ccc;
    background: #fff; }
    .weather-info__item__temps {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      -ms-flex-pack: justify;
      justify-content: space-between; }
      .weather-info__item__temps > p {
        -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
        display: -ms-flexbox;
        display: flex;
        font: 0.9375rem/1.0625rem "RobotoBold", Helvetica, Arial, sans-serif; }
      .weather-info__item__temps .temp--min, .weather-info__item__temps .temp--max {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        -ms-flex-preferred-size: 50%;
        flex-basis: 50%; }
        .weather-info__item__temps .temp--min p, .weather-info__item__temps .temp--max p {
          display: block;
          width: 100%;
          text-align: left; }
    .weather-info__item__humidity {
      width: 100%;
      border-top: 1px solid #ccc; }
      .weather-info__item__humidity > p {
        text-align: left;
        font: 0.9375rem/1.0625rem "RobotoBold", Helvetica, Arial, sans-serif; }
      .weather-info__item__humidity .humidity p {
        text-align: left; }

p, li, a {
  font: 0.875rem/1rem "RobotoLight", Helvetica, Arial, sans-serif;
  color: #232323;
  padding: 5px 0; }

.items-to-show {
  display: -ms-flexbox;
  display: flex;
  width: 300px;
  margin-top: 20px;
  -ms-flex-pack: center;
  justify-content: center; }
  .items-to-show li {
    padding: 0 10px; }
    .items-to-show li a {
      text-decoration: underline; }
      .items-to-show li a:hover {
        text-decoration: none;
        color: navy; }

.header {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 15px 0; }
  .header__info p {
    font: 1rem/1.375rem "RobotoLight", Helvetica, Arial, sans-serif;
    color: #232323; }
  .header__info strong {
    font: 1rem/1.375rem "RobotoBold", Helvetica, Arial, sans-serif; }
  .header__city-select li {
    display: inline-block; }
    .header__city-select li a {
      display: block;
      font: 0.875rem/1.25rem "RobotoLight", Helvetica, Arial, sans-serif;
      color: #fff;
      margin: 0 10px;
      padding: 5px 15px;
      transition: all .2s ease;
      background: #8BC34A;
      position: relative;
      overflow: hidden; }
      .header__city-select li a:before {
        content: attr(data-caption);
        position: absolute;
        left: 0;
        bottom: -100%;
        width: 100%;
        height: 100%;
        background: #558b2f;
        transition: all .2s ease-out;
        font: 0.875rem/1.875rem "RobotoLight", Helvetica, Arial, sans-serif; }
      .header__city-select li a:hover {
        color: #558b2f; }
        .header__city-select li a:hover:before {
          bottom: 0;
          visibility: visible;
          color: #fff; }
    .header__city-select li:nth-last-of-type(1) a {
      margin-right: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
